%% 程序说明：
% 模型的系统识别：
% 主要基于被控对象plant的数学模型不确定，使得PIDD控制器的极点配置无法进行。为此提出在通过是VCM只在机械的模型下获得其频率响应，然后基于实验数据利用智能系统识别算法来识别出被控对象中不确定的参数，以便后面一步的PIVA控制器的极点配置设计。
%                         
%                                    K                  s^2+bs+c
% VCM(音圈马达)的模型结构为：G1(s)=--------       G2=--------------
%                                  s(s+a)               s^2+ds+c
% 
%% 清空工作环境
clear 
close all
clc

%% 导入数据
path="E:\ZD\data\ZData1(Signal_180_1)\NewVCMME.txt";
path='E:\ZD\data\ZData1(Signal_180_1)\VCMdata0.txt';
path1="E:\ZD\data\ZData(Signal_256_2)\VCMData1.txt";
path='VCMdata0.txt';
path1='VCMData1.txt';
VCM_data=load(path1);
 

freq=VCM_data(:,1);
gain=VCM_data(:,2);
phase=VCM_data(:,3);%注意单位为度（°）

% freq=[30	30.9670000000000	31.9330000000000	32.9000000000000	33.8660000000000	34.8330000000000	35.8000000000000	36.7660000000000	37.7330000000000	38.6990000000000	39.6660000000000	40.8670000000000	42.1540000000000	43.4410000000000	44.7270000000000	46.0140000000000	47.3000000000000	48.5870000000000	49.8740000000000	51.1600000000000	52.4470000000000	54.0350000000000	55.7360000000000	57.4370000000000	59.1380000000000	60.8390000000000	62.5400000000000	64.2420000000000	65.9430000000000	67.6440000000000	69.3450000000000	71.4450000000000	73.6940000000000	75.9430000000000	78.1930000000000	80.4420000000000	82.6920000000000	84.9410000000000	87.1900000000000	89.4400000000000	91.6890000000000	94.4650000000000	97.4390000000000	100.413000000000	103.387000000000	106.361000000000	109.335000000000	112.309000000000	115.283000000000	118.257000000000	121.231000000000	124.902000000000	128.834000000000	132.767000000000	136.699000000000	140.631000000000	144.563000000000	148.495000000000	152.428000000000	156.360000000000	160.292000000000	165.146000000000	170.345000000000	175.544000000000	180.743000000000	185.943000000000	191.142000000000	196.341000000000	201.540000000000	206.740000000000	211.939000000000	218.356000000000	225.231000000000	232.105000000000	238.979000000000	245.854000000000	252.728000000000	259.603000000000	266.477000000000	273.352000000000	280.226000000000	288.712000000000	297.801000000000	306.890000000000	315.980000000000	325.069000000000	334.159000000000	343.248000000000	352.337000000000	361.427000000000	370.516000000000	381.736000000000	393.754000000000	405.772000000000	417.790000000000	429.808000000000	441.826000000000	453.844000000000	465.862000000000	477.880000000000	489.898000000000	504.732000000000	520.622000000000	536.513000000000	552.403000000000	568.293000000000	584.184000000000	600.074000000000	615.964000000000	631.855000000000	647.745000000000	667.359000000000	688.369000000000	709.380000000000	730.390000000000	751.400000000000	772.410000000000	793.420000000000	814.431000000000	835.441000000000	856.451000000000	882.385000000000	910.165000000000	937.944000000000	965.724000000000	993.504000000000	1021.28400000000	1049.06400000000	1076.84300000000	1104.62300000000	1132.40300000000	1166.69300000000	1203.42400000000	1240.15400000000	1276.88400000000	1313.61500000000	1350.34500000000	1387.07600000000	1423.80600000000	1460.53700000000	1497.26700000000	1542.60600000000	1591.17100000000	1639.73600000000	1688.30100000000	1736.86700000000	1785.43200000000	1833.99700000000	1882.56200000000	1931.12800000000	1979.69300000000	2039.64000000000	2103.85300000000	2168.06600000000	2232.27900000000	2296.49200000000	2360.70500000000	2424.91900000000	2489.13200000000	2553.34500000000	2617.55800000000	2696.81900000000	2781.72200000000	2866.62500000000	2951.52800000000	3036.43100000000	3121.33400000000	3206.23600000000	3291.13900000000	3376.04200000000	3460.94500000000	3565.74500000000	3678.00400000000	3790.26300000000	3902.52200000000	4014.78100000000	4127.04000000000	4239.29800000000	4351.55700000000	4463.81600000000	4576.07500000000	4714.64300000000	4863.07200000000	5011.50100000000	5159.93000000000	5308.35900000000	5456.78800000000	5605.21700000000	5753.64600000000	5902.07500000000	6050.50400000000	6233.71900000000	6429.97200000000	6626.22600000000	6822.47900000000	7018.73300000000	7214.98600000000	7411.24000000000	7607.49300000000	7803.74700000000	8000];
% gain=[20.0485900000000	19.6353500000000	19.1868300000000	19.0653300000000	18.7686100000000	18.4995000000000	18.1418600000000	17.6436800000000	17.2182400000000	16.8547300000000	16.4031000000000	15.9637900000000	15.2178100000000	14.5976700000000	14.1772500000000	13.6849600000000	13.1273000000000	12.5361000000000	12.0215100000000	11.6226000000000	11.1498300000000	10.5772400000000	9.94645900000000	9.37336700000000	8.89090400000000	8.46894100000000	8.04795800000000	7.64310800000000	7.27498300000000	6.89828400000000	6.40497600000000	5.78864300000000	5.30621500000000	4.78905000000000	4.14312500000000	3.61653500000000	3.21985800000000	2.77911900000000	2.33856700000000	1.88453600000000	1.46966200000000	1.03270100000000	0.550709000000000	0.0612580000000000	-0.454854000000000	-0.979330000000000	-1.49252400000000	-1.99655900000000	-2.49269700000000	-2.99734300000000	-3.52878100000000	-4.08441700000000	-4.80469100000000	-5.61851700000000	-6.46667200000000	-7.27965800000000	-8.11242500000000	-8.87892600000000	-9.70942000000000	-10.4018400000000	-11.1739800000000	-12.0008900000000	-12.9216300000000	-13.8162800000000	-14.6023600000000	-15.3020800000000	-16.0681400000000	-16.7506200000000	-17.3905000000000	-18.0385800000000	-18.6326300000000	-19.2073300000000	-19.9150100000000	-20.5584600000000	-21.2299900000000	-21.8426500000000	-22.3572800000000	-22.9064500000000	-23.4705300000000	-24.0023500000000	-24.4694900000000	-24.9782600000000	-25.6171500000000	-26.1590900000000	-26.7446600000000	-27.2599900000000	-27.7881300000000	-28.2855800000000	-28.8142900000000	-29.3174000000000	-29.7491700000000	-30.1825500000000	-30.7468400000000	-31.1833700000000	-31.7383300000000	-32.2384800000000	-32.7212400000000	-33.2340000000000	-33.6668400000000	-34.0669300000000	-34.4897900000000	-34.9720500000000	-35.5388600000000	-36.1124400000000	-36.6470100000000	-37.1677000000000	-37.5938800000000	-38.0826500000000	-38.5573200000000	-39.0205000000000	-39.3781600000000	-39.8694500000000	-40.3640200000000	-40.9864800000000	-41.4105600000000	-41.9862700000000	-42.4157500000000	-42.7047000000000	-42.9269100000000	-43.4016200000000	-42.9534800000000	-43.7905300000000	-44.6907700000000	-45.7870600000000	-45.6165700000000	-46.0029600000000	-46.5710800000000	-47.0573700000000	-47.3095500000000	-47.4662600000000	-47.4662200000000	-47.8249700000000	-48.2800300000000	-48.8214100000000	-49.5544500000000	-49.7407200000000	-49.4471500000000	-49.6653300000000	-50.0425100000000	-49.7244700000000	-50.4973000000000	-52.7996700000000	-53.0132800000000	-52.9510800000000	-53.1432000000000	-52.8047300000000	-52.8753600000000	-53.1741300000000	-53.2554400000000	-54.3306900000000	-53.1351600000000	-53.8072100000000	-59.0908100000000	-63.4643200000000	-61.7221400000000	-59.8140300000000	-69.0485700000000	-61.9426600000000	-56.9292100000000	-56.7381700000000	-61.7758500000000	-59.0734500000000	-57.3858400000000	-62.2860100000000	-52.9935100000000	-52.2095700000000	-51.1807900000000	-54.5017800000000	-49.7556500000000	-52.4313400000000	-58.2987200000000	-62.4690100000000	-54.4126300000000	-57.2262700000000	-63.2099700000000	-66.9300000000000	-67.5650600000000	-76.5063600000000	-71.0774200000000	-76.6525100000000	-73.1221100000000	-84.0748100000000	-85.3345900000000	-80.3955900000000	-89.9147900000000	-88.7334400000000	-92.4183900000000	-86.4806400000000	-85.1819500000000	-84.0483100000000	-86.8530600000000	-91.9636600000000	-80.8730300000000	-90.1598800000000	-91.0002100000000	-90.2196500000000	-90.0189700000000	-97.3036400000000	-92.8466000000000	-83.1501700000000	-85.8099700000000];
% phase=[184.926200000000	185.990400000000	185.574800000000	185.481300000000	184.859200000000	184.037500000000	183.725500000000	183.352800000000	183.048000000000	182.584700000000	182.216200000000	181.567200000000	181.388300000000	181.233700000000	180.763800000000	180.191400000000	179.818900000000	179.608700000000	179.397300000000	179.087000000000	178.768300000000	178.395400000000	178.183300000000	177.864500000000	177.613300000000	177.264900000000	176.892700000000	176.544100000000	176.134000000000	175.759600000000	175.414200000000	175.257800000000	174.839400000000	174.454400000000	174.154900000000	173.919600000000	173.533200000000	173.179900000000	172.828200000000	172.504600000000	172.194700000000	171.744600000000	171.266500000000	170.833600000000	170.315400000000	169.948600000000	169.511400000000	169.124500000000	168.716200000000	168.281500000000	167.895200000000	167.412500000000	166.962700000000	166.424300000000	165.923800000000	165.405800000000	164.865400000000	164.384400000000	163.768000000000	163.307700000000	162.792700000000	162.240300000000	161.612700000000	160.947400000000	160.212800000000	159.614500000000	158.945400000000	158.271600000000	157.599500000000	156.936800000000	156.282800000000	155.537900000000	154.568700000000	153.770000000000	152.856300000000	151.942400000000	151.105500000000	150.077700000000	149.232500000000	148.401700000000	147.646100000000	146.358900000000	145.225700000000	144.206800000000	143.113500000000	142.010300000000	141.096300000000	139.788300000000	138.690100000000	137.622000000000	136.582100000000	134.906700000000	133.401300000000	131.483700000000	130.055100000000	128.411700000000	127.121400000000	125.723100000000	124.136400000000	122.438300000000	121.071500000000	119.476200000000	117.281600000000	115.663200000000	113.599700000000	111.954400000000	109.593700000000	107.714600000000	105.836100000000	104.499000000000	102.444700000000	100.048400000000	97.8957100000000	95.0888500000000	92.0007300000000	89.4384900000000	87.7912300000000	86.7377200000000	83.2543200000000	79.9506600000000	86.7438700000000	74.3203400000000	68.3710900000000	69.0296900000000	65.6320800000000	61.0844200000000	58.4874200000000	55.8139400000000	53.1349000000000	50.7241100000000	46.3108200000000	40.7326800000000	35.8441100000000	27.8569600000000	22.4893400000000	19.1300800000000	16.7049800000000	8.99708100000000	2.63993400000000	-4.26384400000000	-19.6295700000000	-21.8183300000000	-23.3163800000000	-28.6001700000000	-33.4510300000000	-40.0481100000000	-50.8622900000000	-61.2219800000000	-71.4041700000000	-82.9661900000000	-99.7688300000000	-136.082400000000	-156.861400000000	-152.714400000000	-132.050800000000	-168.635700000000	-125.127900000000	-125.144200000000	-141.943000000000	165.309700000000	143.305200000000	138.055200000000	92.0804000000000	15.3612500000000	11.8390600000000	-85.5109500000000	-150.879000000000	157.951600000000	119.912100000000	62.0862400000000	46.6602700000000	16.9973800000000	-35.8422100000000	-115.981000000000	158.227100000000	6.79161400000000	-56.7188700000000	-47.9737800000000	-81.9051800000000	-94.6358600000000	-85.4280200000000	-107.131000000000	-148.951700000000	165.576900000000	174.639000000000	-113.176400000000	-156.922400000000	176.753200000000	-11.2077700000000	167.743800000000	100.366400000000	-42.1176800000000	-103.231200000000	66.1788500000000	-113.231600000000	-79.1548500000000	-56.3903200000000	-80.3725400000000	-42.8390700000000	-40.7514700000000	-56.4851600000000];

% %观测VCM的频率响应
% figure
% subplot(211)
% semilogx(freq,gain,'LineWidth',1.5);
% xlim([min(freq),max(freq)]);
% grid on
% xlabel('frequency(Hz)');
% ylabel('Gain(dB)');
% subplot(212)
% semilogx(freq,phase,'LineWidth',1.5)
% xlim([min(freq),max(freq)]);
% grid on 
% xlabel('frequency(Hz)');
% ylabel('Phase(°)');


%对频率从响应实验数据进行数据平滑
gain_smoth=zeros(length(freq),1);
phase_smoth=zeros(length(freq),1);

gain_smoth(1)= gain(1);
gain_smoth(2)=(gain(1)+gain(2))/2;
gain_smoth(3)=(gain(1)+gain(2)+gain(3))/3;
gain_smoth(4)=(gain(1)+gain(2)+gain(3)+gain(4))/4;
gain_smoth(5)=(gain(1)+gain(2)+gain(3)+gain(4)+gain(5))/5;
gain_smoth(6)=(gain(1)+gain(2)+gain(3)+gain(4)+gain(5)+gain(6))/6;
for i=7:201
   gain_smoth(i)=(gain(i)+gain(i-1)+gain(i-2)+gain(i-3)+gain(i-4)+gain(i-5))/6;
end
phase_smoth(1)= phase(1);
phase_smoth(2)=(phase(1)+phase(2))/2;
phase_smoth(3)=(phase(1)+phase(2)+phase(3))/3;
phase_smoth(4)=(phase(1)+phase(2)+phase(3)+phase(4))/4;
phase_smoth(5)=(phase(1)+phase(2)+phase(3)+phase(4)+phase(5))/5;
phase_smoth(6)=(phase(1)+phase(2)+phase(3)+phase(4)+phase(5)+phase(6))/6;
for i=7:201
   phase_smoth(i)=(phase(i)+phase(i-1)+phase(i-2)+phase(i-3)+phase(i-4)+phase(i-5))/6;
end

% 查看VCM频率响应
% figure
% subplot(211)
% semilogx(freq,gain,freq,gain_smoth,'LineWidth',1.5);
% xlim([min(freq),max(freq)]);
% grid on
% xlabel('frequency(Hz)');
% ylabel('Gain(dB)');
% legend('frequency response VCM by measure','frequency response VCM by Smoothing')
% subplot(212)
% semilogx(freq,phase,freq,phase_smoth,'LineWidth',1.5)
% xlim([min(freq),max(freq)]);
% grid on 
% xlabel('frequency(Hz)');
% ylabel('Phase(°)');

% 单位转换
GAIN=10.^(gain_smoth/20).*(cos(phase_smoth*pi/180)+1i*sin(phase_smoth*pi/180));
%GAIN=10.^(gain/20).*(cos(phase*pi/180)+1i*sin(phase*pi/180));

%% 配置参数
N=5;%待辨识参数的个数
%设置参数的下限[Km,J,b,L,R]
ParaLLimits=[1.5e7,1,1,1,1];
%设置参数的上限
ParaHLimits=[5e7,10,100,10,100];
%速度变化限制VLimit
VL=[100,1,1,1,1];

%粒子群个数
M=100;
%迭代计算次数
S=1000;
%惯性权重计算方式如下
%        Vi（t）-Vi(t-1)
% w = -------------------
%          Vi(t)
wx=[0.8,1.2];
%自我判断能力
c=[0.6,0.8];
%自我社会认知能力
l=[0.6 0.7];
%设置V预存空间
V=zeros(N,M);

%初始群体设置
SetsIni=rand(N,M);
E=zeros(1,M);%误差
NG=zeros(1,length(freq));
for i=1:M
    SetsIni(1,i)=ParaLLimits(1,1)+(ParaHLimits(1,1)-ParaLLimits(1,1))*SetsIni(1,i);
    SetsIni(2,i)=ParaLLimits(1,2)+(ParaHLimits(1,2)-ParaLLimits(1,2))*SetsIni(2,i);
    SetsIni(3,i)=ParaLLimits(1,3)+(ParaHLimits(1,1)-ParaLLimits(1,3))*SetsIni(3,i);
    SetsIni(4,i)=ParaLLimits(1,4)+(ParaHLimits(1,2)-ParaLLimits(1,4))*SetsIni(4,i);
    SetsIni(5,i)=ParaLLimits(1,5)+(ParaHLimits(1,1)-ParaLLimits(1,5))*SetsIni(5,i);
    TemSet=SetsIni(:,i);
    %% 计算目标函数值 
    [E(i),~]=Newpsoi_obj(TemSet,freq,GAIN);
end 
%找到初始群体里面的最优Qbest和整体最优QBest
Qbest=E(1);QbSet=SetsIni(:,1);
for i=2:N
    if Qbest<E(i)
        Qbest=E(i);
        QbSet=SetsIni(:,i);
    end
end
QBest=Qbest;QBSet=QbSet;
Error=zeros(1,S);
%% 迭代计算
for n=1:S
    w=wx(2)-(wx(2)-wx(1))/S*n;
    for i=1:M 
        %对每个粒子进行速度更新
        V(1,i)=V(1,i)+c(1)*rand*(QbSet(1,1)-SetsIni(1,i))+c(2)*rand*(QBSet(1,1)-SetsIni(1,i));
        V(2,i)=V(2,i)+c(1)*rand*(QbSet(2,1)-SetsIni(2,i))+c(2)*rand*(QBSet(2,1)-SetsIni(2,i));
        V(3,i)=V(3,i)+c(1)*rand*(QbSet(3,1)-SetsIni(3,i))+c(2)*rand*(QBSet(3,1)-SetsIni(3,i));
        V(4,i)=V(4,i)+c(1)*rand*(QbSet(4,1)-SetsIni(4,i))+c(2)*rand*(QBSet(4,1)-SetsIni(4,i));
        V(5,i)=V(5,i)+c(1)*rand*(QbSet(5,1)-SetsIni(5,i))+c(2)*rand*(QBSet(5,1)-SetsIni(5,i));
        %速度限幅处理
        if V(1,i)>VL(1);V(1,i)=VL(1);end
        if V(1,i)<-VL(1);V(1,i)=-VL(1);end
        
        if V(2,i)>VL(2);V(2,i)=VL(2);end
        if V(2,i)<-VL(2);V(2,i)=-VL(2);end
        
        if V(3,i)>VL(3);V(3,i)=VL(3);end
        if V(3,i)<-VL(3);V(3,i)=-VL(3);end
        
        if V(4,i)>VL(4);V(4,i)=VL(4);end
        if V(4,i)<-VL(4);V(4,i)=-VL(4);end
        
        if V(5,i)>VL(5);V(5,i)=VL(5);end
        if V(5,i)<-VL(1);V(5,i)=-VL(5);end
        %对每个粒子位置进行更新
        SetsIni(:,i)=SetsIni(:,i)+V(:,i);
        %参数限幅处理
        if SetsIni(1,i)>ParaHLimits(1);SetsIni(1,i)=ParaHLimits(1);end
        if SetsIni(1,i)<ParaLLimits(1);SetsIni(1,i)=ParaLLimits(1);end
        
        if SetsIni(2,i)>ParaHLimits(2);SetsIni(2,i)=ParaHLimits(2);end
        if SetsIni(2,i)<ParaLLimits(2);SetsIni(2,i)=ParaLLimits(2);end
        
        if SetsIni(3,i)>ParaHLimits(3);SetsIni(3,i)=ParaHLimits(3);end
        if SetsIni(3,i)<ParaLLimits(3);SetsIni(3,i)=ParaLLimits(3);end
        
        if SetsIni(4,i)>ParaHLimits(4);SetsIni(4,i)=ParaHLimits(4);end
        if SetsIni(4,i)<ParaLLimits(4);SetsIni(4,i)=ParaLLimits(4);end
        
        if SetsIni(5,i)>ParaHLimits(5);SetsIni(5,i)=ParaHLimits(5);end
        if SetsIni(5,i)<ParaLLimits(5);SetsIni(5,i)=ParaLLimits(5);end
        %计算个粒子的目标函数值
        
        [E(i),~]=Newpsoi_obj(SetsIni(:,i),freq,GAIN);
        if Qbest>E(i)
           Qbest=E(i);
           QbSet=SetsIni(:,i);
        end
    end 
    if QBest>Qbest
        QBest=Qbest;
        QBSet=QbSet;
    end
%     if Qbest<1
%          break;
%     end
    Error(n)=QBest;
end

%% 结果显示
figure
plot(1:S,Error,'LineWidth',1.5)
%title('Variation of error')
xlabel('Iterations')
ylabel('error')
grid  on 

[FC,NG]=Newpsoi_obj(QbSet,freq,GAIN);
FC

Tgain=20*log10(abs(NG));
Tphase=angle(NG)*180/pi;

figure
subplot(211)
semilogx(freq,20*log10(abs(NG)),'k--',freq,gain,'b','LineWidth',1.5);
xlim([min(freq),max(freq)]);
legend('by PSO','by experment')
ylabel('Gain(dB)')
grid on
subplot(212)
semilogx(freq,Tphase,freq,phase);
xlim([min(freq),max(freq)]);
xlabel('Frequency(Hz)')
ylabel('Phase(°)')
grid on


